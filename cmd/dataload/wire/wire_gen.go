// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/google/wire"
	"github.com/jiu-u/oai-api/internal/handler"
	"github.com/jiu-u/oai-api/internal/repository"
	"github.com/jiu-u/oai-api/internal/server"
	"github.com/jiu-u/oai-api/internal/service"
	"github.com/jiu-u/oai-api/pkg/app"
	"github.com/jiu-u/oai-api/pkg/cache"
	"github.com/jiu-u/oai-api/pkg/config"
	"github.com/jiu-u/oai-api/pkg/jwt"
	"github.com/jiu-u/oai-api/pkg/log"
	"github.com/jiu-u/oai-api/pkg/sid"
)

// Injectors from wire.go:

func NewWire(cfg *config.Config, logger *log.Logger) (*app.App, func(), error) {
	sidSid := sid.NewSid()
	db := repository.NewDB(cfg)
	repositoryRepository := repository.NewRepository(logger, db)
	transaction := repository.NewTransaction(repositoryRepository)
	jwtJWT := jwt.NewJwt(cfg)
	cacheCache := cache.New()
	serviceService := service.NewService(sidSid, transaction, logger, jwtJWT, cacheCache)
	channelRepository := repository.NewChannelRepository(repositoryRepository)
	channelModelRepository := repository.NewChannelModelRepository(repositoryRepository)
	channelService := service.NewChannelService(serviceService, channelRepository, channelModelRepository)
	dataLoadTask := server.NewDataLoad(channelService, cfg, logger)
	appApp := newApp(dataLoadTask)
	return appApp, func() {
	}, nil
}

// wire.go:

var repositorySet = wire.NewSet(repository.NewDB, repository.NewRepository, repository.NewTransaction, repository.NewChannelRepository, repository.NewChannelModelRepository)

var serviceSet = wire.NewSet(service.NewService, service.NewOaiService, service.NewChannelService, service.NewLoadBalanceServiceBeta)

var handlerSet = wire.NewSet(handler.NewHandler, handler.NewOAIHandler)

var serverSet = wire.NewSet(server.NewDataLoad)

// build App
func newApp(
	loadServer *server.DataLoadTask,

) *app.App {
	return app.NewApp(app.WithServer(loadServer), app.WithName("demo-server"))
}
